ext {
    gitCommitMessage = this.getGitCommit()
    buildTime = this.buildTime()
    gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
    writeChangeLog = this.writeChangeLogIfNeeded(gitCommitMessage)
}

def getGitCommit() {
    def gitDir = new File("$rootDir/.git")
    if (!gitDir.isDirectory()) {
        return 'non-git-build'
    }
    def cmd = 'git log --pretty=format:"%s; commitId:%h, commitTime:%ad" -1'
//    def cmd = 'git rev-parse --short HEAD'
//    def cmd = 'git log --pretty=short -1'
//    def cmd = 'git log  -1'
//    def cmd = 'git cat-file -p HEAD'
//    def cmd = 'git log --pretty=format:"%an: %s" --since="2008-10-01"'
    def gitCommit = cmd.execute().text.trim()
    assert !gitCommit.isEmpty()
    gitCommit
}

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('YYYY-MM-dd-HH-mm')
    return formattedDate
}

def checkCommitChanged(){
    def gitDetail = 'git cat-file -p HEAD'.execute([], project.rootDir).text.trim()
    println(gitDetail)

}


def writeChangeLogIfNeeded(String commitInfo){
    File changeLogFile = new File("${rootDir.getPath()}/ChangeLog")
    checkCommitChanged()
    changeLogFile.withWriterAppend { os ->
        os.writeLine(commitInfo)
        os.flush()
        os.close()
    }
    println(changeLogFile.getText())
    changeLogFile
}